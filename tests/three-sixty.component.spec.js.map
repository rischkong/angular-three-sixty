{"version":3,"file":"three-sixty.component.spec.js","sourceRoot":"","sources":["three-sixty.component.spec.ts"],"names":[],"mappings":";;AAAA,iDAA0E;AAC1E,sEAAmE;AACnE,kEAA+D;AAC/D,8DAA+C;AAG/C,sCAA6C;AAE7C,QAAQ,CAAC,qBAAqB,EAAE;IAC5B,IAAI,OAA8C,CAAC;IACnD,IAAI,SAA8B,CAAC;IACnC,IAAI,aAAgC,CAAC;IACrC,IAAI,iBAAoC,CAAC;IACzC,IAAI,UAAsB,CAAC;IAE3B,UAAU,CAAC,UAAC,IAAI;QACZ,iBAAO,CAAC,sBAAsB,CAAC;YAC3B,YAAY,EAAE,CAAC,2CAAmB,CAAC;YACnC,SAAS,EAAE,CAAC,uCAAiB,CAAC;SACjC,CAAC,CAAC;QAEH,iBAAO,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,gBAAM,CAAC,CAAC,uCAAiB,CAAC,EAAE,UAAC,kBAAqC;QACzE,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,2CAAmB,CAAC,CAAC;QACvD,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACtC,iBAAiB,GAAG,kBAAkB,CAAC;QAEvC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC;QAC3E,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,aAAa,EAAE;YACjD,MAAM,EAAE,EAAE;YACV,cAAc,EAAE,CAAC;SACpB,CAAC,CAAC;QAEH,KAAK,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/D,KAAK,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAChC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,CAAC,CAAC;QAClF,KAAK,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QACzC,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,iCAAiC,EAAE;QAClC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;QACvB,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;QAEvB,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QACnB,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,cAAc,GAAG,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG;YACX,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;SACnC,CAAC;QAEF,UAAU,CAAC;YACP,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAC1B,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC;YAC1C,SAAS,CAAC,MAAM,GAAG,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE;YAC1C,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE;gBACjE,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,cAAc;aACjC,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,EAAE,CAAC,CAAC,CAAC;YACtE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE;YACvC,SAAS,CAAC,UAAU,GAAG,GAAG,CAAC;YAE3B,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE;gBACjE,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,cAAc;aACjC,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,EAAE,GAAG,CAAC,CAAC;YACxE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE;YACjE,IAAM,WAAW,GAAG,EAAE,CAAC;YAEvB,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;YAEpC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE;gBACjE,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,cAAc;gBAC9B,WAAW,aAAA;aACd,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE;YAC9D,IAAM,QAAQ,GAAG;gBACb;oBACI,IAAI,EAAE,eAAe;oBACrB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,KAAK;oBACV,IAAI,EAAE,OAAO;iBAChB;gBACD;oBACI,IAAI,EAAE,eAAe;oBACrB,KAAK,EAAE,GAAG;oBACV,QAAQ,EAAE,GAAG;oBACb,GAAG,EAAE,KAAK;oBACV,IAAI,EAAE,KAAK;iBACd;aACJ,CAAC;YAEF,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE9B,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE;gBACjE,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,cAAc;gBAC9B,QAAQ,UAAA;aACX,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE;YACvD,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YAEzB,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,UAAC,IAAI;YACxE,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAEnC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YAEzB,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,UAAU,CAAC;gBACP,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBAEpD,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE;QACpB,EAAE,CAAC,sDAAsD,EAAE;YACvD,IAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,IAAM,gBAAgB,GAA2B;gBAC7C,MAAM,EAAE,SAAS,CAAC,MAAM;gBACxB,cAAc,EAAE,SAAS,CAAC,cAAc;gBACxC,WAAW,EAAE,cAAc;aAC9B,CAAC;YAEF,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,SAAS,CAAC,WAAW,GAAG,cAAc,CAAC;YACvC,SAAS,CAAC,WAAW,CAAC,EAAC,WAAW,EAAE,IAAI,mBAAY,CAAC,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YAErG,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+DAA+D,EAAE;YAChE,SAAS,CAAC,WAAW,CAAC,EAAC,WAAW,EAAE,IAAI,mBAAY,CAAC,IAAI,EAAE,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,EAAC,CAAC,CAAC;YAE1F,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kGAAkG,EAAE;YACnG,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,SAAS,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,IAAI,mBAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YAE/E,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uFAAuF,EAAE;YACxF,IAAM,SAAS,GAAG;gBACd,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;aACnC,CAAC;YAEF,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,SAAS,CAAC,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;YACrC,SAAS,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,IAAI,mBAAY,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YAExE,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,oBAAoB,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;YACxE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4EAA4E,EAAE,UAAC,IAAI;YAClF,IAAM,SAAS,GAAG;gBACd,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;gBAChC,gCAAgC;aACnC,CAAC;YACF,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAEnC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YACzB,SAAS,CAAC,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;YACrC,SAAS,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,IAAI,mBAAY,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YAExE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAE9C,UAAU,CAAC;gBACP,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBAEpD,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+FAA+F,EAAE;YAChG,SAAS,CAAC,QAAQ,EAAE,CAAC;YAErB,SAAS,CAAC,WAAW,CAAC,EAAC,GAAG,EAAE,IAAI,mBAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YAEpE,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE;QACvB,UAAU,CAAC,cAAM,OAAA,SAAS,CAAC,QAAQ,EAAE,EAApB,CAAoB,CAAC,CAAC;QAEvC,EAAE,CAAC,sDAAsD,EAAE;YACvD,SAAS,CAAC,YAAY,EAAE,CAAC;YAEzB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,UAAC,IAAI;YACxE,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAEnC,SAAS,CAAC,YAAY,EAAE,CAAC;YAEzB,UAAU,CAAC;gBACP,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBAEpD,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { TestBed, ComponentFixture, inject } from '@angular/core/testing';\nimport { ThreeSixtyComponent } from '../src/three-sixty.component';\nimport { ThreeSixtyFactory } from '../src/three-sixty.factory';\nimport { By } from '@angular/platform-browser';\nimport ThreeSixty from '@rischkong/three-sixty';\nimport { ConfigurationInterface } from '@rischkong/three-sixty/dist/interfaces/configuration.interface';\nimport { SimpleChange } from '@angular/core';\n\ndescribe('ThreeSixtyComponent', () => {\n    let fixture: ComponentFixture<ThreeSixtyComponent>;\n    let component: ThreeSixtyComponent;\n    let canvasElement: HTMLCanvasElement;\n    let threeSixtyFactory: ThreeSixtyFactory;\n    let threeSixty: ThreeSixty;\n\n    beforeEach((done) => {\n        TestBed.configureTestingModule({\n            declarations: [ThreeSixtyComponent],\n            providers: [ThreeSixtyFactory]\n        });\n\n        TestBed.compileComponents().then(done);\n    });\n\n    beforeEach(inject([ThreeSixtyFactory], (_threeSixtyFactory: ThreeSixtyFactory) => {\n        fixture = TestBed.createComponent(ThreeSixtyComponent);\n        component = fixture.componentInstance;\n        threeSixtyFactory = _threeSixtyFactory;\n\n        canvasElement = fixture.debugElement.query(By.css('canvas')).nativeElement;\n        threeSixty = threeSixtyFactory.create(canvasElement, {\n            angles: 36,\n            anglesPerImage: 6\n        });\n\n        spyOn(threeSixtyFactory, 'create').and.returnValue(threeSixty);\n        spyOn(threeSixty, 'initialize');\n        spyOn(threeSixty, 'preload').and.returnValue(new Promise((resolve) => resolve()));\n        spyOn(threeSixty, 'updateConfiguration');\n        spyOn(threeSixty, 'updateImages');\n    }));\n\n    it('should set the canvas dimension', () => {\n        component.width = 1280;\n        component.height = 720;\n\n        fixture.detectChanges();\n\n        expect(canvasElement.width).toBe(1280);\n        expect(canvasElement.height).toBe(720);\n    });\n\n    describe('::ngOnInit', () => {\n        const angles = 36;\n        const anglesPerImage = 6;\n        const images = [\n            'http://example.com/image-0.jpg',\n            'http://example.com/image-1.jpg',\n            'http://example.com/image-2.jpg',\n            'http://example.com/image-3.jpg',\n            'http://example.com/image-4.jpg',\n            'http://example.com/image-5.jpg'\n        ];\n\n        beforeEach(() => {\n            component.angles = angles;\n            component.anglesPerImage = anglesPerImage;\n            component.images = {1024: images};\n        });\n\n        it('should initialize a ThreeSixty instance', () => {\n            component.ngOnInit();\n\n            expect(threeSixtyFactory.create).toHaveBeenCalledWith(canvasElement, {\n                angles: angles,\n                anglesPerImage: anglesPerImage\n            });\n            expect(threeSixty.initialize).toHaveBeenCalledWith({1024: images}, 0);\n            expect(threeSixty.preload).not.toHaveBeenCalled();\n        });\n\n        it('should use the specified start angle', () => {\n            component.startAngle = 185;\n\n            component.ngOnInit();\n\n            expect(threeSixtyFactory.create).toHaveBeenCalledWith(canvasElement, {\n                angles: angles,\n                anglesPerImage: anglesPerImage\n            });\n            expect(threeSixty.initialize).toHaveBeenCalledWith({1024: images}, 185);\n            expect(threeSixty.preload).not.toHaveBeenCalled();\n        });\n\n        it('should configure the speedFactor if the input parameter is set', () => {\n            const speedFactor = 10;\n\n            component.speedFactor = speedFactor;\n\n            component.ngOnInit();\n\n            expect(threeSixtyFactory.create).toHaveBeenCalledWith(canvasElement, {\n                angles: angles,\n                anglesPerImage: anglesPerImage,\n                speedFactor\n            });\n        });\n\n        it('should configure the hotspots if the input parameter is set', () => {\n            const hotspots = [\n                {\n                    text: 'Lorem ipsum 1',\n                    angle: 0.78,\n                    endAngle: 0.95,\n                    top: '25%',\n                    left: '27.5%'\n                },\n                {\n                    text: 'Lorem ipsum 2',\n                    angle: 0.4,\n                    endAngle: 0.6,\n                    top: '65%',\n                    left: '60%'\n                }\n            ];\n\n            component.hotspots = hotspots;\n\n            component.ngOnInit();\n\n            expect(threeSixtyFactory.create).toHaveBeenCalledWith(canvasElement, {\n                angles: angles,\n                anglesPerImage: anglesPerImage,\n                hotspots\n            });\n        });\n\n        it('should preload the images if the preload flag is set', () => {\n            component.preload = true;\n\n            component.ngOnInit();\n\n            expect(threeSixty.preload).toHaveBeenCalled();\n        });\n\n        it('should trigger the preloaded event when the images are preloaded', (done) => {\n            spyOn(component.preloaded, 'emit');\n\n            component.preload = true;\n\n            component.ngOnInit();\n\n            setTimeout(() => {\n                expect(component.preloaded.emit).toHaveBeenCalled();\n\n                done();\n            });\n        });\n    });\n\n    describe('ngOnChanges', () => {\n        it('should update the three sixty instance configuration', () => {\n            const newSpeedFactor = 20;\n            const newConfiguration: ConfigurationInterface = {\n                angles: component.angles,\n                anglesPerImage: component.anglesPerImage,\n                speedFactor: newSpeedFactor\n            };\n\n            component.ngOnInit();\n\n            component.speedFactor = newSpeedFactor;\n            component.ngOnChanges({speedFactor: new SimpleChange(component.speedFactor, newSpeedFactor, false)});\n\n            expect(threeSixty.updateConfiguration).toHaveBeenCalledWith(newConfiguration);\n        });\n\n        it('should not update the three sixty instance does not exist yet', () => {\n            component.ngOnChanges({speedFactor: new SimpleChange(null, component.speedFactor, true)});\n\n            expect(threeSixty.updateConfiguration).not.toHaveBeenCalled();\n        });\n\n        it('should not update the three sixty instance configuration if the only changed property was images', () => {\n            component.ngOnInit();\n\n            component.ngOnChanges({images: new SimpleChange(component.images, [], false)});\n\n            expect(threeSixty.updateConfiguration).not.toHaveBeenCalled();\n        });\n\n        it('should update the three sixty instance images if the images property has been changed', () => {\n            const newImages = [\n                'http://example.com/image-0.jpg',\n                'http://example.com/image-1.jpg',\n                'http://example.com/image-2.jpg',\n                'http://example.com/image-3.jpg',\n                'http://example.com/image-4.jpg',\n                'http://example.com/image-5.jpg'\n            ];\n\n            component.ngOnInit();\n\n            component.images = {1024: newImages};\n            component.ngOnChanges({images: new SimpleChange([], newImages, false)});\n\n            expect(threeSixty.updateImages).toHaveBeenCalledWith({1024: newImages});\n            expect(threeSixty.preload).not.toHaveBeenCalled();\n        });\n\n        it('should preload the images after changing them when the preload flag is set', (done) => {\n            const newImages = [\n                'http://example.com/image-0.jpg',\n                'http://example.com/image-1.jpg',\n                'http://example.com/image-2.jpg',\n                'http://example.com/image-3.jpg',\n                'http://example.com/image-4.jpg',\n                'http://example.com/image-5.jpg'\n            ];\n            spyOn(component.preloaded, 'emit');\n\n            component.ngOnInit();\n\n            component.preload = true;\n            component.images = {1024: newImages};\n            component.ngOnChanges({images: new SimpleChange([], newImages, false)});\n\n            expect(threeSixty.preload).toHaveBeenCalled();\n\n            setTimeout(() => {\n                expect(component.preloaded.emit).toHaveBeenCalled();\n\n                done();\n            });\n        });\n\n        it('should not update the three sixty instance images if the images property has not been changed', () => {\n            component.ngOnInit();\n\n            component.ngOnChanges({foo: new SimpleChange('foo', 'bar', false)});\n\n            expect(threeSixty.updateImages).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('::forcePreload', () => {\n        beforeEach(() => component.ngOnInit());\n\n        it('should preload the images if the preload flag is set', () => {\n            component.forcePreload();\n\n            expect(threeSixty.preload).toHaveBeenCalled();\n        });\n\n        it('should trigger the preloaded event when the images are preloaded', (done) => {\n            spyOn(component.preloaded, 'emit');\n\n            component.forcePreload();\n\n            setTimeout(() => {\n                expect(component.preloaded.emit).toHaveBeenCalled();\n\n                done();\n            });\n        });\n    });\n});\n"]}